import java.util.*;

public class Process {
	Queue<String> inst=new LinkedList<String>();
	int id;
	int[] claim;
	int[] alloc;
	int[] need;
	int wait=0;
	int total=0;
	boolean aborted=false;
	boolean terminated=false;
	boolean blocked=false;
	
	
	Process(int res,int id)
	{
		claim=new int[res];
		alloc=new int[res];
		need=new int[res];
		this.id=id;
	}
	
	//releasing n-resources where res is type of resource
	public void release(int res, int n)
	{
		alloc[res]=alloc[res]-n;
		Main.avl[res]=Main.avl[res]+n;
	}
	//releasing all resouorces
	public void release_all()
	{
		for(int i=0;i<alloc.length;i++)
		{
			Main.avl[i]=Main.avl[i]+alloc[i];
			alloc[i]=0;
		}
	}
	// setting claim for each task(process)
	public void initiate(int res, int n)
	{
		claim[res]=n;
	}
	
	//requesting n-resources where res is type of resource
	public void request(int res, int n)
	{
		if(Main.avl[res]-n>=0)//checking to see if the requested resources are available
		{
			alloc[res]=alloc[res]+n;
			need[res]=need[res]-n;
			Main.avl[res]=Main.avl[res]-n;
			blocked=false;
		}
		else//block it
		{
			blocked=true;
		}
	}
	
	public void terminate()
	{
		terminated=false;
	}
	
	public void parse_inst()
	{
		String line=inst.poll();
		String activity=line.split("\\+")[0];
		int process=Integer.parseInt(line.split("\\+")[1]);
		int resource=Integer.parseInt(line.split("\\+")[2]);
		int n_resources=Integer.parseInt(line.split("\\+")[3]);
		
		
		if(activity.equals("initiate"))
		{
			initiate(resource-1,n_resources);
		}
		if(activity.equals("request"))
		{
			request(resource-1,n_resources);
			if(this.blocked==true)
			{
				inst.add(line);
			}
		}
		if(activity.equals("release"))
		{
			release(resource-1,n_resources);
		}
		if(activity.equals("terminate"))
		{
			terminate();
		}
	}
	
	public int get_req_res()
	{
		String line=inst.peek();
		String activity=line.split("\\+")[0];
		int process=Integer.parseInt(line.split("\\+")[1]);
		int resource=Integer.parseInt(line.split("\\+")[2]);
		int n_resources=Integer.parseInt(line.split("\\+")[3]);
		
		return n_resources;
	}
	
	

}
