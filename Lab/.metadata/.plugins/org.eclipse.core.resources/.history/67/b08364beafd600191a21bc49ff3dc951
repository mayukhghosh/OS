import java.io.*;
import java.util.*;

public class link_implement {
	static int num_module;
	static int curr_module;
	static int num_define;
	static int[] base;
	static String[] line_tot= {};
	static Map sym=new HashMap();
	public static void main(String[] args)throws Exception {
		
		String text=input_2();
		/*base=new int[num];
		System.out.println("num: "+num);
		pass_1(text);*/

	}
	
	/*public static void input()
	{
		String text="";int count=0;num_module=0;
		Scanner sc=new Scanner(new InputStreamReader(System.in));
		System.out.println("Input:");
		while(sc.hasNext())
		{
			if(count==0)
			{
				num_module=sc.nextInt();

				count++;
				continue;
			}
			String line=sc.nextLine();
			//System.out.println("*****"+line);
			text=text+line+'\n';
			count++;
			if((num_module*3)+1==(count))
			{
				break;
			}
		}		
		System.out.println("----------");
		System.out.println(text);
		sc.close();
	}*/
	
	public static String input_1()throws Exception
	{
		String text="";int count=0;num_module=0;
		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
		String line;
		while (true)
		{
			line=input.readLine();
			if(line.equals(""))
				continue;
			if(line.charAt(0)==' ')
			{
				line=line.substring(1,line.length());
			}
			if(count==0)
			{
				num_module=Integer.parseInt(line.substring(0,1));
				count++;
				continue;
			}
			//System.out.println("*****"+line);
			text=text+line+'\n';
			count++;
			if((num_module*3)+1==(count))
			{
				break;
			}
		}		
		System.out.println("----------");
		//System.out.println(text);
		return text;
	}
	
	public static void pass_1(String text)
	{
		base[0]=0;
		Scanner sc=new Scanner(text);
		for(int i=0;i<num_module*3;i++)
		{
			int module_no=i/3;
			String line=sc.nextLine();
			System.out.println("line: "+line);
			if((i%3)==0 && Integer.parseInt(line.substring(0,1))!=0)
			{
				int pairs=Integer.parseInt(line.substring(0,1));
				String[] symbols=line.substring(2,line.length()).split(" ");
				for(int j=0;j<pairs;j++)
				{
					sym.put(symbols[j], base[module_no]+Integer.parseInt(symbols[j+1]));
				}
			}
			else if((i%3)==2)
			{
				if(module_no+1>=num_module)
					continue;
				//System.out.println("line: "+line);
				base[module_no+1]=base[module_no]+Integer.parseInt(line.substring(0,1));
			}
		}
		
		for (Object key: sym.keySet()) 
        {
			String key1=key.toString();
            System.out.println("key : "+key1+" Value in Dictionary : " + sym.get(key1)); 
        }
		for(int i=0;i<num_module;i++)
			System.out.println(base[i]);
	}

	public static String input_2()throws Exception
	{
		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
		String curr="";String[] line;int flag=0;int start=1;
		while(true)
		{
			curr=input.readLine();
			try {
				if(curr.equals(""))
				continue;
			}
			catch(Exception e)
			{
				break;
			}
			
			line=curr.split("\\s+");
			line_tot=combine(line_tot,line);
			System.out.println(Arrays.toString(line_tot));
			num_module=Integer.parseInt(line_tot[0]);
			/*if(flag==0)
				flag=var_define_use(line_tot,start,input);
			else if(flag==1)
				flag=var_use(line_tot,start);*/
		}
		//System.out.println(line_tot.length);
		int position=1;
		num_module=Integer.parseInt(line_tot[0]);
		String text=line_tot[0]+"\n";
		while(position<line_tot.length)
		{
			System.out.println(position);
			text=text+var_define_use(line_tot,position)+"\n";
			position=position+Integer.parseInt(line_tot[position])*2+1;
			text=text+var_define_use(line_tot,position)+"\n";
			position=position+Integer.parseInt(line_tot[position])*2+1;
			text=text+var_define_use(line_tot,position)+"\n";
			position=position+Integer.parseInt(line_tot[position])+1;
		}
		System.out.println(text);
		return text;
	}
	
	public static String var_define_use(String[] line_tot, int start)
	{
		String text="";
		int end=start+Integer.parseInt(line_tot[start])*2;
		for(int i=start+1;i<=end;i++)
		{
			text=text+line_tot[i];
		}
		return text;
	}
	public static String var_use(String[] line_tot,int start)
	{
		String text="";
		int end=start+Integer.parseInt(line_tot[start]);
		for(int i=start+1;i<=end;i++)
		{
			text=text+line_tot[i];
		}
		return text;
	}
	

	
	public static int var_define_use(String[] line_tot,int start, BufferedReader input)throws Exception
	{
		num_define=Integer.parseInt(line_tot[start].trim());
		int end;int pointer;
		if(start+num_define*2<line_tot.length)
		{
			end=start+num_define*2;
			return 1;
		}
		else
		{
			pointer=line_tot.length-1;
			while(true)
			{
				String curr=input.readLine();
				if(curr.equals(""))
					continue;
				String[] line=curr.split("\\s+");
				line_tot=combine(line_tot,line);
				if((line_tot.length-pointer)>start+num_define*2)
				{
					
				}
			}
		}
	}
	public static int var_use(String[] line_tot,int start, BufferedReader input)
	{
		num_define=Integer.parseInt(line_tot[start].trim());
		if(start+num_define<line_tot.length)
		{
			curr_module++;
			return 0;
		}
		else
			return 1;
	}
	
	 public static String[] combine(String[] a, String[] b){
	        int length = a.length + b.length;
	        String[] result = new String[length];
	        System.arraycopy(a, 0, result, 0, a.length);
	        System.arraycopy(b, 0, result, a.length, b.length);
	        return result;
	    }
}
