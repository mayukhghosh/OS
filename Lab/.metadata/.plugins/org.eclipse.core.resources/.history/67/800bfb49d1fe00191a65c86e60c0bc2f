import java.util.*;

public class optimistic {
	static Queue<Process> blocked_processes=new LinkedList<Process>();
	static Queue<Process> temp=new LinkedList<Process>();
	static HashMap<Integer,Integer> just_blocked;
	public static void run()
	{
		int blocked_flag=0;
		int terminated_flag=0;
		while(true)
		{
			just_blocked=new HashMap<>();
			blocked_flag=0;
			terminated_flag=0;
			//run blocked tasks first
			while(blocked_processes.size()!=0)
			{
				Process prc=blocked_processes.poll();
				prc.parse_inst();
				if(prc.blocked==true)
				{
					temp.add(prc);
					System.out.println(prc.id+" added to blocked_processs");
				}
				just_blocked.put(prc.id,0);	
			}
			while(temp.size()!=0)
			{
				blocked_processes.add(temp.poll());
			}
			//run tasks which were not blocked
			for(int i=0;i<Main.list.size();i++)
			{
				if(Main.list.get(i).terminated==false && just_blocked.containsKey(Main.list.get(i).id)==false)
				{
					Main.list.get(i).parse_inst();
					if(Main.list.get(i).blocked==true)
					{
						
						blocked_processes.add(Main.list.get(i));
					}
				}
			}			
			//check if every process is blocked
			for(int i=0;i<Main.list.size();i++)
			{
				if(Main.list.get(i).terminated==false && Main.list.get(i).blocked==true)
				{
					blocked_flag++;
				}
			}
			if(blocked_flag==Main.list.size())
			{
				check_abort();
			}
			
			//check if every process is terminated
			for(int i=0;i<Main.list.size();i++)
			{
				if(Main.list.get(i).terminated==true)
				{
					terminated_flag++;
				}
			}
			if(terminated_flag==Main.list.size())
			{
				break;
			}
		}
		System.out.println("FIFO");
		for(int i=0;i<Main.list.size();i++)
		{
			if(Main.list.get(i).aborted==true)
			{
				System.out.println("Task "+Main.list.get(i).id+"\t"+"aborted");
			}
			else
			{
				System.out.println("Task "+Main.list.get(i).id+"\t"+Main.list.get(i).total+"\t"+Main.list.get(i).wait+"\t"+(Main.list.get(i).wait)/(Main.list.get(i).total)*100+"%");
			}
		}
	}
	
	public static void check_abort()
	{
		int flag=0;
		for(int i=0;i<Main.list.size();i++)
		{
			System.out.println("---------");
			Main.list.get(i).release_all();
			Main.list.get(i).aborted=true;
			Main.list.get(i).terminated=true;
			Main.list.get(i).blocked=false;
			for(int j=i+1;j<Main.list.size();j++)
			{
				if(Main.avl[0]>=Main.list.get(j).get_req_res())
				{
					flag=1;
					break;
				}
			}
			if(flag==1)
				break;
		}
	}

}
