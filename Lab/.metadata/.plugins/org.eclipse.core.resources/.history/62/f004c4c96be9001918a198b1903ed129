
import java.util.Comparator;
public class Process {
	int a;//arrival time
	int c;//Total CPU time
	int b;//next CPU burst time
	int m;//next I/O time
	int finish_time;
	int turnaround;//finish_time-a
	int io_time;//time in blocked time
	int wait_time;//time in ready state
	int blocked_burst;//time remaining in current blocked state
	boolean in_queue;//For FCFS and RR
	int cpu_left=0;//For RR
	String state;

	Process(int a,int c,int b,int m)
	{
		this.a=a;
		this.c=c;
		this.b=b;
		this.m=m;
		this.state="unstarted";
	}
	/*public int compareTo(Process o) {
		if (this.a>o.a)
			return 1;
		else 
			return -1;
	}*/

		public static Comparator<Process> ArrivalComparator = new Comparator<Process>() {

		public int compare(Process p1, Process p2) {
			if(p1.a>p2.a)
				return 1;
			else
				return -1;
		}};

		public static Comparator<Process> remCPUComparator = new Comparator<Process>() {

			public int compare(Process p1, Process p2) {
			   if(p1.c>p2.c)
				   return 1;
			   else
				   return -1;
		    }};

		public String toString() {
			return a+" "+b+" "+c+" "+m;
		}

}
