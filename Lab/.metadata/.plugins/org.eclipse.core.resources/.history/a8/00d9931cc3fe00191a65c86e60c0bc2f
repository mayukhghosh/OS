import java.util.*;

public class optimistic {
	Queue<String> blocked_processes=new LinkedList<String>();
	public void run()
	{
		int blocked_flag=0;
		while(true)
		{
			blocked_flag=0;
			//run blocked tasks first
			for(int i=0;i<Main.list.size();i++)
			{
				if(Main.list.get(i).terminated==false)
				{
					Main.list.get(i).parse_inst();
				}
			}
			for(int i=0;i<Main.list.size();i++)//check if every process is blocked
			{
				if(Main.list.get(i).terminated==false && Main.list.get(i).blocked==true)
				{
					blocked_flag++;
				}
			}
			if(blocked_flag==Main.list.size())
			{
				check_abort();
			}
		}
	}
	
	public void check_abort()
	{
		int flag=0;
		for(int i=0;i<Main.list.size();i++)
		{
			Main.list.get(i).release_all();
			Main.list.get(i).aborted=true;
			Main.list.get(i).terminated=true;
			Main.list.get(i).blocked=false;
			for(int j=i+1;j<Main.list.size();j++)
			{
				if(Main.avl[0]>=Main.list.get(j).get_req_res())
				{
					flag=1;
					break;
				}
			}
			if(flag==1)
				break;
		}
	}

}
